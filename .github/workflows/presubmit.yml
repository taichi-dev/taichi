name: Presubmit Checks
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check_files:
    name: Check files
    outputs:
      run_job: ${{ steps.check_files.outputs.run_job }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: check modified files
        id: check_files
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only @^
          chore_files=( LICENSE CONTRIBUTING.md README.md netlify.toml )
          chore_dirs=( docs )
          run_job=false
          for file in $(git diff --name-only @^); do
            is_chore=false
            for chore_file in ${chore_files[*]}; do
              [[ ${file} == ${chore_file} ]] && is_chore=true && break
            done
            for chore_dir in ${chore_dirs[*]}; do
              [[ ${file} == ${chore_dir}/* ]] && is_chore=true && break
            done
            if ! ${is_chore}; then
              run_job=true
              break
            fi
          done
          if ${run_job}; then
            echo "::set-output name=run_job::true"
          else
            echo "::set-output name=run_job::false"
          fi
  check_code_format:
    name: Check Code Format
    runs-on: ubuntu-latest
    needs: check_files
    if: needs.check_files.outputs.run_job == 'true'
    # This job will be required to pass before merging to master branch.
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Setup git & clang-format
        run: |
          git config user.email "taichigardener@gmail.com"
          git config user.name "Taichi Gardener"
          git checkout -b _fake_squash
          git remote add upstream https://github.com/taichi-dev/taichi.git
          git fetch upstream master
          sudo apt install clang-format-10
      - name: Cache PIP
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('setup.py') }}-${{ hashFiles('requirements_dev.txt') }}

      - name: Install requirements
        run: |
          python3 -m pip install --user -r requirements_dev.txt
      - name: Check code format
        run: |
          python3 misc/code_format.py
          git checkout -b _enforced_format
          git commit -am "enforce code format" || true
          # exit with 1 if there were differences:
          git diff _fake_squash _enforced_format --exit-code

  build_and_test_windows:
    name: Build and Test (Windows)
    needs: [check_code_format, check_files]
    runs-on: [self-hosted,windows]
    timeout-minutes: 90
    steps:S
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Build
        shell: powershell
        run: |
          if ( "${{needs.check_files.outputs.run_job}}" -eq "false" ) {
            exit 0
          }
          .\.github\workflows\scripts\win_build.ps1 -installVulkan -install -libsDir C:\

      - name: Test
        shell: powershell
        run: |
          if ( "${{needs.check_files.outputs.run_job}}" -eq "false" ) {
            exit 0
          }
          $env:PATH = ";C:\taichi_llvm\bin;C:\taichi_clang\bin;" + $env:PATH
          . venv\Scripts\activate.ps1
          python -c "import taichi"
          python examples/algorithm/laplace.py
          ti diagnose
          ti changelog
          ti test -vr2 -t2
        env:
          PYTHON: C:\hostedtoolcache\windows\Python\3.7.9\x64\python.exe

 