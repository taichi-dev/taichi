name: Publishing Release
on:
  schedule:
    - cron: '0 20 * * *'  # GMT 20 == GMT+8 04
  workflow_dispatch:
    # Manually trigger the release workflow, a version must be provided
    inputs:
      version:
        description: 'The version to release (e.g. v0.8.0), or leave it empty for nightly build'
        type: string
        required: false

env:
  PROD_PWD: ${{ secrets.PYPI_PWD_PROD }}
  NIGHT_PWD: ${{ secrets.TAICHI_PYPI_PWD }}
  NIGHT_USERNAME: ${{ secrets.TAICHI_PYPI_USERNAME }}
  METADATA_USERNAME: ${{ secrets.METADATA_USERNAME }}
  METADATA_PASSWORD: ${{ secrets.METADATA_PASSWORD }}
  METADATA_URL: ${{ secrets.METADATA_URL }}
  RELEASE_VERSION: ${{ github.event.inputs.version }}
  TI_CI: 1

jobs:
  upload_to_pypi:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # - name: Get dist files
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: dist
      #     path: dist
      #
      - name: Get dist files (mock)
        run: |
          mkdir -p dist
          cd dist
          wget https://files.pythonhosted.org/packages/27/51/8d2dd2b9e40a1b7be1c619b49cb850e6db51ecf686072bf7f31cfc83897a/taichi-1.3.0-cp39-cp39-manylinux_2_27_x86_64.whl

      - name: Upload to PyPI
        run: |
          set -ex
          ls -l dist/
          if [ -z "$RELEASE_VERSION" ]; then
            export PROJECT_NAME="taichi-nightly"
          else
            export PROJECT_NAME="taichi"
            VER=$(echo $RELEASE_VERSION | sed 's/^v//')
            if [ $(ls dist/taichi-$VER-*.whl | wc -l) != $(ls dist/*.whl | wc -l) ]; then
              echo Version number mismatch
              # exit 1
            fi
            # pip install -f dist taichi==$VER
            pip install -f dist taichi
            if ! python -c 'import taichi' | grep "^.Taichi. version $VER,"; then
              echo Taichi init version number mismatch!!
              exit 1
            fi
          fi
          python -m pip install requests twine
          python misc/upload_release.py
