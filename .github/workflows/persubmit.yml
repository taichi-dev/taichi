name: Persubmit Checks
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build_and_test:
    name: Build and Test
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'skip ci') && github.event.sender.login != 'taichi-gardener' }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python: 3.6
            with_cc: OFF
          - os: macos-latest
            python: 3.7
            with_cc: OFF
          - os: ubuntu-16.04  # TODO(archibate): windows-latest
            python: 3.8
            with_cc: OFF
          - os: ubuntu-latest
            python: 3.8
            with_cc: ON
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Download Pre-Built LLVM 10.0.0
        run: |
          python misc/ci_download.py
          mkdir taichi-llvm
          cd taichi-llvm
          unzip ../taichi-llvm.zip
        env:
          CI_PLATFORM: ${{ matrix.os }}

      - name: Build Project
        run: |
          export TAICHI_REPO_DIR=`pwd`
          export PATH=$TAICHI_REPO_DIR/taichi-llvm/bin/:$PATH
          export CXX=clang++
          python misc/ci_setup.py ci
        env:
          CI_SETUP_CMAKE_ARGS: -DTI_WITH_OPENGL:BOOL=OFF -DTI_WITH_CC:BOOL=${{ matrix.with_cc }}

      - name: Functionallity Test
        run: |
          export TAICHI_REPO_DIR=`pwd`
          export PATH=$TAICHI_REPO_DIR/bin:$PATH
          export PATH=$TAICHI_REPO_DIR/taichi-llvm/bin/:$PATH
          export PYTHONPATH=$TAICHI_REPO_DIR/python
          python examples/laplace.py
          ti diagnose
          ti test -vr2 -t2

  code_format:
    name: Code Format
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.pull_request.requested_reviewers.*.login, 'taichi-gardener') }}
    steps:
      - uses: actions/checkout@v2
      - name: Check code format
        run: |
          git fetch https://github.com/taichi-dev/taichi.git refs/heads/master
          git reset FETCH_HEAD
          git add .
          git config user.email "taichigardener@gmail.com"
          git config user.name "Taichi Gardener"
          git commit -m "fake squash commit" || true
          git checkout -b _last_squash
          git checkout -b _enforced_format
          git reset FETCH_HEAD
          python3 -m pip install --user yapf gitpython
          python3 python/taichi/code_format.py
          git add .
          git commit -m "enforce code format" || true
          # exit with 1 if there were differences:
          git diff _last_squash _enforced_format --exit-code

  title_format:
    name: Check PR Title
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Run PR Title Checker
        run: |
          pip install semver GitPython
          python misc/ci_check_pr_title.py "$PR_TITLE"
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
