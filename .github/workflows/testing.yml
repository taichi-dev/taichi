name: Build and Test
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [master]
  schedule:
    - cron: '0 18 * * *'  # For testing the offline cache, GMT 18 == GMT+8 02

concurrency:
  group: ${{ github.event.number || github.run_id }}
  cancel-in-progress: true

env:
  TI_CI: "1"
  TI_LITE_TEST: ${{ github.event_name == 'pull_request' && ! contains(github.event.pull_request.labels.*.name, 'full-ci') && ! startsWith(github.base_ref, 'rc-') && '1' || '' }}
  TI_TEST_OFFLINE_CACHE: ${{ github.event.schedule == '0 18 * * *' && '1' || '' }}

jobs:
  show_environ:
    name: Show Environment Variables
    # Disable this workflow on forks
    if: github.repository_owner == 'taichi-dev'
    runs-on: [self-hosted, Linux]
    steps:
    - name: Environment Variables
      run: env
    - name: Github Object
      run: |
        cat <<'EOF'
        ${{ toJson(github) }}
        EOF

  check_files:
    name: Check files
    # Disable this workflow on forks
    if: github.repository_owner == 'taichi-dev'
    outputs:
      run_job: ${{ steps.check_files.outputs.run_job }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: check modified files
        id: check_files
        run: |
          echo "Concurrency group: ${{ github.event.number || github.run_id }}"
          echo "=============== list modified files ==============="
          git diff --name-only @^

          chore_files=( LICENSE CONTRIBUTING.md README.md netlify.toml )
          chore_dirs=( docs )
          run_job=false

          for file in $(git diff --name-only @^); do
            is_chore=false

            for chore_file in ${chore_files[*]}; do
              [[ ${file} == ${chore_file} ]] && is_chore=true && break
            done

            for chore_dir in ${chore_dirs[*]}; do
              [[ ${file} == ${chore_dir}/* ]] && is_chore=true && break
            done

            if ! ${is_chore}; then
              run_job=true
              break
            fi
          done

          if ${run_job}; then
            echo "::set-output name=run_job::true"
          else
            echo "::set-output name=run_job::false"
          fi


  build_and_test_windows:
    name: Build and Test Windows
    needs: check_files
    strategy:
      matrix:
        include:
          - os: windows-2019
            llvmVer : '15'
            archs: "cuda"
          - os: windows-2019
            llvmVer : '10'
            archs: "cuda,opengl"
    runs-on: [self-hosted, windows, proton]
    timeout-minutes: ${{ github.event.schedule != '0 18 * * *' && 90 || 180 }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Add Visual Studio Shell to ENV
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Build
        shell: pwsh
        if: ${{ needs.check_files.outputs.run_job != 'false' }}
        run: |
          Get-Host
          Get-ExecutionPolicy -List
          echo $MyInvocation
          curl.exe -vv baidu.com
          .\.github\workflows\scripts\win_build.ps1  -llvmVer ${{ matrix.llvmVer }} -installVulkan -install -libsDir C:\
        env:
          TAICHI_CMAKE_ARGS: -DTI_WITH_OPENGL:BOOL=ON -DTI_WITH_DX11:BOOL=ON -DTI_WITH_CC:BOOL=OFF -DTI_WITH_C_API=ON -DTI_BUILD_TESTS:BOOL=ON

      - name: Test
        id: test
        shell: powershell
        if: ${{ needs.check_files.outputs.run_job != 'false' }}
        run: |
          .\.github\workflows\scripts\win_test.ps1
        env:
          TI_WANTED_ARCHS: ${{ matrix.archs }}
          TI_SKIP_VERSION_CHECK: ON
          TI_CI: 1
          PYTHON: '3.7'
          TI_DEVICE_MEMORY_GB: '0.7'
          TI_RUN_RELEASE_TESTS: '1'

      - name: Save wheel if test failed
        if: failure() && steps.test.conclusion == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: broken-wheel
          path: dist/*
          retention-days: 7
